----总体说明----
1. .git目录下文件不能做任何改动！！！！
2. 对版本库的操作只能在.git目录的父目录中进行，称其为工作目录（经测试，在其子目录中也可操作，但需注意相对路径）
3. 工作目录外的文件不被版本库管辖，工作目录中子目录的变化能被版本库管辖
4. 切换文件夹即切换版本库，不同文件夹中所有的操作都只针对此版本库（例如cd入不同文件夹，其远程关联库会自动改变）
5. 远程仓库名称和本地工作目录的名称可以不同

----安装配置----
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

----创建版本库----
初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
第二步，使用命令git commit -m "注释"，完成。
注：如果想add整个文件夹，使用命令git add .
	文件名和注释可为中文，建议使用UTF-8编码

----查看状态及更改----
要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

----版本回退----
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
穿梭前，用git log --pretty=oneline可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

----工作区 版本库----
正常操作区域为工作区，.git目录下为版本库，版本库中有暂存区（stage）和分支（branch），创建版本库时会自动创建第一个分支（master）
git add把文件添加进去，实际上就是把文件修改添加到暂存区（stage）
git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支

----管理修改----
git管理的不是文件，而是修改，每次commit只会提交最近一次git add的修改
第一次修改 -> git add -> 第二次修改 -> git add -> git commit

----撤销修改----
git checkout -- myfile.txt		将工作区文件恢复到最近一次git commit或git add时的状态
git reset HEAD .				撤销最近一次add至暂存区，但还未commit的内容（清空缓存区，不修改工作区和分支）

对于文件 myfile.txt
① 修改后 未add（添加到暂存区） 需要撤销修改时：
        git checkout -- myfile.txt 或 手动删除工作区修改
        工作区 ： clean  暂存区： clean
② 修改后 add了（未commit） 再次修改文件  要撤销第二次修改时：
        git checkout -- myfile.txt (将暂存区恢复到工作区)
        暂存区有第一次的修改需要commit
③ 修改后 add了（未commit），需要撤销修改时：
        git reset HEAD myfile.txt (将暂存区修改删除)
        此时工作区的修改还未撤销
        git checkout -- myfile.txt (撤销工作区修改)
④ 修改后 add并commit了，需要撤销修改时：
        git reset --hard HEAD^  (版本回退)**
		
----删除文件----
将工作区文件删除后，更新版本库
git rm test.txt		（注：经测试，使用 git add . 也可实现此功能）
git commit -m "remove test.txt"

将工作区文件删除后，试图恢复
git checkout -- test.txt

将工作区文件删除，并add后，试图恢复
git reset HEAD test.txt
git checkout -- test.txt

将工作区文件删除，并add和commit后，试图恢复
git reset --hard HEAD^  (版本回退)

----关联远程仓库 github----
注册github
git remote add origin git@github.com:lixiangyu0506/learngit.git   	要关联一个远程库
git push -u origin master                                         	关联后，第一次推送master分支的所有内容；
git push origin master												此后，每次本地提交后，只要有必要，就可以使用此命令推送master分支最新修改
git remote rm origin												取消远程库关联（取消后可重复上述步骤关联）
git remote -v														查看远程权限
注：1.首次登陆，ssh协议输入yes
	2.http协议，git remote add origin https://github.com/lixiangyu0506/learngit.git，但每次需要输入注册用户名和密码。
	
----克隆远程仓库----
git clone git@github.com:lixiangyu0506/learngit.git		克隆一个远程仓库

----创建与合并分支----
HEAD指向当前分支，当前分支指向最新提交
git branch					查看分支，并在当前分支前标"*"
git branch <name>			创建分支
git branch -d <name>		删除分支
git checkout <name>			切换分支
git checkout -b <name>		创建+切换分支
git merge <name>			合并某分支到当前分支

